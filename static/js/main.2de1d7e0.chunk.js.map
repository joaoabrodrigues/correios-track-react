{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","typography","useNextVariants","App","handleChange","object","event","setState","target","value","handleKeyPress","key","state","test","length","loading","handleClick","objectUrl","URLSearchParams","window","location","search","get","info","isUrl","bind","this","axios","then","response","data","className","AppBar","position","color","Toolbar","Typography","variant","TextField","id","label","type","margin","helperText","onChange","onKeyPress","inputProps","maxLength","Button","disabled","onClick","Chip","objeto","numero","categoria","includes","Table","TableHead","TableRow","TableCell","component","scope","TableBody","evento","map","tipo","criacao","hora","descricao","destino","unidade","cidade","uf","local","tipounidade","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2de1d7e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport axios from 'axios'\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#212121',\r\n      },\r\n    },\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n});\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n    super()\r\n    let objectUrl = new URLSearchParams(window.location.search).get('object')\r\n\r\n    objectUrl = objectUrl && objectUrl.length === 13 && /^[A-Za-z]{2}[0-9]{9}[A-Za-z]{2}/.test(objectUrl) ? objectUrl : null\r\n\r\n    this.state =  {\r\n      info: '',\r\n      object: objectUrl ? objectUrl : '',\r\n      loading: true,\r\n      isUrl: true\r\n    }\r\n\r\n    if (objectUrl) {\r\n      this.handleClick()\r\n    } else {\r\n      this.state.loading = false\r\n    }\r\n\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  handleChange = object => event => {\r\n    this.setState({\r\n      [object]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleKeyPress = event => {\r\n    if (event.key === 'Enter' && !(!this.state.object || !/^[A-Za-z]{2}[0-9]{9}[A-Za-z]{2}/.test(this.state.object) || this.state.object.length !== 13 ) && !this.state.loading) {\r\n      this.handleClick();\r\n    }\r\n  };\r\n\r\n  handleClick() {\r\n    if (!this.state.loading || this.state.isUrl) {\r\n      this.setState({info: '', loading: true})\r\n\r\n      axios.get(`https://correiostrackssl.joaorodrigues.dev/v1/tracking/${this.state.object}`)\r\n           .then(response => this.setState({info: response.data, loading: false}))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <AppBar position=\"static\" color=\"primary\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" color=\"inherit\">\r\n                Correios Tracking\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <div className=\"Margin\">\r\n            <TextField\r\n              id=\"track-object\"\r\n              label=\"Objeto\"\r\n              type=\"text\"\r\n              margin=\"normal\"\r\n              helperText=\"Exemplo: AB123456789BR\"\r\n              onChange={this.handleChange('object')}\r\n              onKeyPress={this.handleKeyPress}\r\n              value={this.state.object}\r\n              inputProps={{\r\n                maxLength: 13,\r\n              }}\r\n            />\r\n            <Button \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"Button\"\r\n              disabled={(!this.state.object || !/^[A-Za-z]{2}[0-9]{9}[A-Za-z]{2}/.test(this.state.object) || this.state.object.length !== 13) || this.state.loading}\r\n              onClick={() => { this.handleClick() }}> \r\n                Rastrear\r\n                <SendIcon className=\"Icon\"/>\r\n              </Button>\r\n            </div>\r\n\r\n            { this.state.info &&\r\n              <Chip className=\"Margin\" color=\"primary\" label={\"Rastreamento de Objeto - \" + this.state.info.objeto[0].numero} />\r\n            }\r\n\r\n            { this.state.info && (!this.state.info.objeto[0].categoria || !this.state.info.objeto[0].categoria.includes(\"ERRO\")) &&\r\n                <Table className=\"TableSize\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell className=\"CellPadding\" component=\"th\" scope=\"row\"><strong>Data / Hora</strong></TableCell>\r\n                      <TableCell className=\"CellPadding\" component=\"th\" scope=\"row\"><strong>Status / Localidade</strong></TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    { this.state.info && \r\n                      this.state.info.objeto[0].evento.map(evento => {\r\n                        return (\r\n                          <TableRow key={evento.tipo + evento.criacao}>\r\n                            <TableCell className=\"TableColor CellPadding\">{evento.data + ' ' + evento.hora}</TableCell>\r\n                              <Table>\r\n                                <TableBody>\r\n                                  <TableRow className=\"TableColor\" key={evento.tipo + evento.descricao}>\r\n                                    <TableCell className=\"CellPadding\"><strong>{evento.descricao}</strong></TableCell>\r\n                                  </TableRow>\r\n                                </TableBody>\r\n                              </Table>\r\n                              <Table>\r\n                                <TableBody>\r\n                                  <TableRow key={evento.tipo+evento.destino}>\r\n                                  { !evento.destino && !evento.unidade.cidade && !evento.unidade.uf &&\r\n                                    <TableCell className=\"CellPadding\">\r\n                                      <strong>Local:</strong>  {\r\n                                                                evento.unidade.local  \r\n                                                                + ' - ' \r\n                                                                + evento.unidade.tipounidade\r\n                                                              }\r\n                                    </TableCell>\r\n                                  }\r\n\r\n                                  { !evento.destino && evento.unidade.cidade && evento.unidade.uf &&\r\n                                    <TableCell className=\"CellPadding\">\r\n                                      <strong>Local:</strong>  {\r\n                                                                evento.unidade.local \r\n                                                                + ' - ' \r\n                                                                + evento.unidade.cidade\r\n                                                                + '/' \r\n                                                                + evento.unidade.uf \r\n                                                                + ' - ' \r\n                                                                + evento.unidade.tipounidade\r\n                                                              }\r\n                                    </TableCell>\r\n                                  }\r\n\r\n                                  { evento.destino && !evento.unidade.cidade && !evento.unidade.uf &&\r\n                                    <TableCell className=\"Origem CellPadding\">\r\n                                      <strong>Origem:</strong> {\r\n                                                                  evento.unidade.local \r\n                                                                  + ' - ' \r\n                                                                  + evento.unidade.tipounidade\r\n                                                                }\r\n                                    </TableCell>\r\n                                  }\r\n                                  { evento.destino && evento.unidade.cidade && evento.unidade.uf &&\r\n                                    <TableCell className=\"Origem CellPadding\">\r\n                                      <strong>Origem:</strong> {\r\n                                                                  evento.unidade.local \r\n                                                                  + ' - ' \r\n                                                                  + evento.unidade.cidade \r\n                                                                  + '/' \r\n                                                                  + evento.unidade.uf \r\n                                                                  + ' - ' \r\n                                                                  + evento.unidade.tipounidade\r\n                                                                }\r\n                                    </TableCell>\r\n                                  }\r\n                                  { evento.destino && !evento.destino[0].cidade && !evento.destino[0].uf &&\r\n                                    <TableCell className=\"CellPadding\">\r\n                                      <strong>Destino:</strong> {\r\n                                                                  evento.destino[0].local \r\n                                                                }\r\n                                    </TableCell>\r\n                                  }\r\n                                  { evento.destino && evento.destino[0].cidade && evento.destino[0].uf &&\r\n                                    <TableCell className=\"CellPadding\">\r\n                                      <strong>Destino:</strong> {\r\n                                                                  evento.destino[0].local \r\n                                                                  + ' - ' \r\n                                                                  + evento.destino[0].cidade \r\n                                                                  + '/' \r\n                                                                  + evento.destino[0].uf\r\n                                                                }\r\n                                    </TableCell>\r\n                                  }\r\n                                  { evento.destino && !evento.destino[0].cidade  && evento.destino[0].uf &&\r\n                                    <TableCell className=\"CellPadding\">\r\n                                      <strong>Destino:</strong> {\r\n                                                                  evento.destino[0].local \r\n                                                                  + ' - ' \r\n                                                                  + evento.destino[0].uf\r\n                                                                }\r\n                                    </TableCell>\r\n                                  }\r\n                                  </TableRow>\r\n                                </TableBody>\r\n                              </Table>\r\n                          </TableRow>\r\n                        );})\r\n                      }\r\n                  </TableBody>\r\n                </Table>\r\n            }\r\n\r\n            { this.state.info && this.state.info.objeto[0].categoria && this.state.info.objeto[0].categoria.includes(\"ERRO\") &&\r\n                <div>Objeto não encontrado na base de dados dos Correios!</div>\r\n            }\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}