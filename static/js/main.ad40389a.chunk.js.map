{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","typography","useNextVariants","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","object","event","setState","defineProperty","target","value","handleKeyPress","key","state","test","length","loading","handleClick","objectUrl","URLSearchParams","window","location","search","get","info","isUrl","bind","assertThisInitialized","_this2","axios","concat","then","response","data","_this3","react_default","a","createElement","styles","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","TextField_default","id","label","type","margin","helperText","onChange","onKeyPress","inputProps","maxLength","Button_default","disabled","onClick","Send_default","Chip_default","objeto","numero","categoria","includes","Table_default","TableHead_default","TableRow_default","TableCell_default","component","scope","TableBody_default","evento","map","tipo","criacao","hora","descricao","destino","unidade","local","cidade","uf","tipounidade","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ad40389a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport axios from 'axios'\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#212121',\r\n      },\r\n    },\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n});\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n    super()\r\n    let objectUrl = new URLSearchParams(window.location.search).get('object')\r\n\r\n    objectUrl = objectUrl && objectUrl.length === 13 && !/^\\s*$/.test(objectUrl) ? objectUrl : null\r\n\r\n    this.state =  {\r\n      info: '',\r\n      object: objectUrl ? objectUrl : '',\r\n      loading: true,\r\n      isUrl: true\r\n    }\r\n\r\n    if (objectUrl) {\r\n      this.handleClick()\r\n    } else {\r\n      this.state.loading = false\r\n    }\r\n\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  handleChange = object => event => {\r\n    this.setState({\r\n      [object]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleKeyPress = event => {\r\n    if (event.key === 'Enter' && !(!this.state.object || /^\\s*$/.test(this.state.object) || this.state.object.length !== 13 ) && !this.state.loading) {\r\n      this.handleClick();\r\n    }\r\n  };\r\n\r\n  handleClick() {\r\n    if (!this.state.loading || this.state.isUrl) {\r\n      this.setState({info: '', loading: true})\r\n\r\n      axios.get(`https://correiostrackssl.joaoabrodrigues.com/v1/tracking/${this.state.object}`)\r\n           .then(response => this.setState({info: response.data, loading: false}))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <AppBar position=\"static\" color=\"primary\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" color=\"inherit\">\r\n                Correios Tracking\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <div className=\"Margin\">\r\n            <TextField\r\n              id=\"track-object\"\r\n              label=\"Objeto\"\r\n              type=\"text\"\r\n              margin=\"normal\"\r\n              helperText=\"Exemplo: AA123456789BR\"\r\n              onChange={this.handleChange('object')}\r\n              onKeyPress={this.handleKeyPress}\r\n              value={this.state.object}\r\n              inputProps={{\r\n                maxLength: 13,\r\n              }}\r\n            />\r\n            <Button \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"Button\"\r\n              disabled={(!this.state.object || /^\\s*$/.test(this.state.object) || this.state.object.length !== 13) || this.state.loading}\r\n              onClick={() => { this.handleClick() }}> \r\n                Rastrear\r\n                <SendIcon className=\"Icon\"/>\r\n              </Button>\r\n            </div>\r\n\r\n            { this.state.info &&\r\n              <Chip className=\"Margin\" color=\"primary\" label={\"Rastreamento de Objeto - \" + this.state.info.objeto[0].numero} />\r\n            }\r\n\r\n            { this.state.info && !this.state.info.objeto[0].categoria.includes(\"ERRO\") &&\r\n                <Table className=\"TableSize\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell className=\"CellPadding\" component=\"th\" scope=\"row\"><strong>Data / Hora</strong></TableCell>\r\n                      <TableCell className=\"CellPadding\" component=\"th\" scope=\"row\"><strong>Status / Localidade</strong></TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    { this.state.info && \r\n                      this.state.info.objeto[0].evento.map(evento => {\r\n                        return (\r\n                          <TableRow key={evento.tipo + evento.criacao}>\r\n                            <TableCell className=\"TableColor CellPadding\">{evento.data + ' ' + evento.hora}</TableCell>\r\n                              <Table>\r\n                                <TableBody>\r\n                                  <TableRow className=\"TableColor\" key={evento.tipo + evento.descricao}>\r\n                                    <TableCell className=\"CellPadding\"><strong>{evento.descricao}</strong></TableCell>\r\n                                  </TableRow>\r\n                                </TableBody>\r\n                              </Table>\r\n                              <Table>\r\n                                <TableBody>\r\n                                  <TableRow key={evento.tipo+evento.destino}>\r\n                                  { !evento.destino &&\r\n                                    <TableCell className=\"CellPadding\">\r\n                                      <strong>Local:</strong> { evento.unidade.local + ' - ' + evento.unidade.cidade + '/' + evento.unidade.uf + ' - ' + evento.unidade.tipounidade }\r\n                                    </TableCell>\r\n                                  }\r\n                                  { evento.destino &&\r\n                                    <TableCell className=\"Origem CellPadding\">\r\n                                      <strong>Origem:</strong> { evento.unidade.local + ' - ' + evento.unidade.cidade + '/' + evento.unidade.uf + ' - ' + evento.unidade.tipounidade}\r\n                                    </TableCell>\r\n                                  }\r\n                                  { evento.destino &&\r\n                                    <TableCell className=\"CellPadding\">\r\n                                      <strong>Destino:</strong> { evento.destino[0].local + ' - ' + evento.destino[0].cidade + '/' + evento.destino[0].uf }\r\n                                    </TableCell>\r\n                                  }\r\n                                  </TableRow>\r\n                                </TableBody>\r\n                              </Table>\r\n                          </TableRow>\r\n                        );})\r\n                      }\r\n                  </TableBody>\r\n                </Table>\r\n            }\r\n\r\n            { this.state.info && this.state.info.objeto[0].categoria.includes(\"ERRO\") &&\r\n                <div>Objeto não encontrado na base de dados dos Correios!</div>\r\n            }\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}